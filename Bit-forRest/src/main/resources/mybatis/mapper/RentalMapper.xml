<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--  <mapper namespace="ProductMapper"> 가 @Mapper 와 함께 밑의 한줄로 대체 됨-->
<mapper namespace="com.mvc.forrest.dao.rental.RentalDAO"> 	
	<resultMap id="rentalSelectMap" type="rental">
		<result property="tranNo" 				column="tranNo" 				jdbcType="VARCHAR"/>
		<result property="divyAddress" 			column="divyAddress" 		jdbcType="VARCHAR" />
		<result property="pickupAddress" 				column="pickupAddress" 					jdbcType="VARCHAR" />
		<result property="startDate" 			column="startDate" 			jdbcType="DATE" />
		<result property="endDate" 				column="endDate" 				jdbcType="DATE" />
		<result property="period" 			column="period" 				jdbcType="INTEGER"  />
		<result property="tranCode" 				column="tranCode" 				jdbcType="TINYINT"  />
		<result property="paymentNo" 				column="paymentNo" 				jdbcType="INTEGER"  />
		<result property="paymentDate" 				column="paymentDate" 				jdbcType="TIMESTAMP"  />
		<result property="paymentWay" 				column="paymentWay" 				jdbcType="VARCHAR"  />
		<result property="receiverPhone" 				column="receiverPhone" 				jdbcType="VARCHAR"  />
		<result property="receiverName" 				column="receiverName" 				jdbcType="VARCHAR"  />
		<result property="prodName" 				column="prodName" 				jdbcType="VARCHAR"  />
		<result property="prodImg" 				column="prodImg" 				jdbcType="VARCHAR"  />
		<result property="originPrice" 				column="originPrice" 				jdbcType="INTEGER"  />
		<result property="discountPrice" 				column="discountPrice" 				jdbcType="INTEGER"  />
		<result property="resultPrice" 				column="resultPrice" 				jdbcType="INTEGER"  />
		<result property="divyRequest" 				column="divyRequest" 				jdbcType="VARCHAR"  />
		
		 <association property="purchaseProd" javaType="product">
		    <id property="prodNo" column="prodNo" jdbcType="VARCHAR"/>
			<result property="width"	   			column="width" 				jdbcType="INTEGER" />
			<result property="length" 			column="LENGTH " 			jdbcType="INTEGER" />
			<result property="height" 			column="height" 		jdbcType="INTEGER" />
			<result property="userId" 				column="userId" 					jdbcType="VARCHAR" />
			<result property="prodCondition" 			column="prodCondition" 			jdbcType="INTEGER" />
			<result property="prodQuantity" 				column="prodQuantity" 				jdbcType="INTEGER" />
			<result property="prodName" 			column="prodName" 				jdbcType="VARCHAR"  />
			<result property="prodDetail" 				column="prodDetail" 				jdbcType="VARCHAR"  />
			<result property="isRental" 				column="isRental" 				jdbcType="TINYINT"  />
			<result property="rentalCounting" 				column="rentalCounting" 				jdbcType="INTEGER"  />
			<result property="rentalPrice" 				column="rentalPrice" 				jdbcType="INTEGER"  />
			<result property="account" 				column="ACCOUNT" 				jdbcType="VARCHAR"  />
			<result property="deposit" 				column="deposit" 				jdbcType="INTEGER"  />
			<result property="category" 				column="category" 				jdbcType="VARCHAR"  />
			<result property="returnAddress" 				column="returnAddress" 				jdbcType="VARCHAR"  />
			<result property="prodImg" 				column="prodImg" 				jdbcType="VARCHAR"  />
			<result property="recentImg" 				column="recentImg" 				jdbcType="VARCHAR"  />
		 </association>
		
		 <association property="buyer" javaType="User">
		    <id property="userId" column="userId" jdbcType="VARCHAR"/>
			<result property="password"			column="password"		jdbcType="VARCHAR"/>
			<result property="nickname"			column="nickname"		jdbcType="VARCHAR"/>
			<result property="userName"			column="userName"		jdbcType="VARCHAR"/>
			<result property="userAddr"			column="userAddr"		jdbcType="VARCHAR"/>
			<result property="phone"			column="phone"			jdbcType="VARCHAR"/>
			<result property="role"				column="role"			jdbcType="VARCHAR"/>
			<result property="joinDate"			column="joinDate"		jdbcType="TIMESTAMP"/>
			<result property="joinPath"			column="joinPath"		jdbcType="VARCHAR"/>
			<result property="userImg"			column="userImg"		jdbcType="VARCHAR"/>
			<result property="recentDate"		column="recentDate"		jdbcType="TIMESTAMP"/>
			<result property="pushToken"		column="pushToken"		jdbcType="VARCHAR"/>
			<result	property="leaveApplyDate"	column="leaveApplyDate"	jdbcType="TIMESTAMP"/>
			<result	property="leaveDate"		column="leaveDate"		jdbcType="TIMESTAMP"/>	
		 </association>
		
	</resultMap>
	
	<!--INSERT-->
	<insert 	id="addRental"		parameterType="rental" >
		INSERT 
	 	INTO transaction(
	 			paymentNo,prodNo,tranNo,prodName,prodImg,userId,receiverName,receiverPhone,divyAddress,pickupAddress,divyRequest,originPrice,resultPrice,startDate, endDate,period) 
	 	VALUES (
	 				#{paymentNo},
	 					#{prodNo},
	 					#{tranNo},
	 					#{prodName},
	 					#{prodImg},
	 					#{userId},
	 			    	#{receiverName},
 			     	  #{receiverPhone}, 
	 				  #{divyAddress},
	 				  #{pickupAddress},
	 				     #{divyRequest},
	 				      #{originPrice}, 
	 				     #{resultPrice},
	 				     date_add(curdate(), interval 1 day), 
	 				     date_add(curdate(), interval 1+#{period} day),
	 				     #{period}
	 				     )
	 </insert>
	 
	 
	 
	 
	 <!-- SELECT -->
	 <select 	id="getRental"	parameterType="String"	resultMap="rentalSelectMap">
			SELECT * FROM transaction t, product p 
			where t.tranNo =  #{tranNo} and t.prodNo = p.prodNo
	 </select>
	 

		 
	<!-- SELECT LIST -->
	<select  id="getRentalList"  parameterType="map"	resultMap="rentalSelectMap">
		SELECT t.tranNo, t.prodImg, t.prodName, t.prodNo, t.startDate, t.endDate, t.paymentNo, t.userId, t.resultPrice, p.recentImg, p.prodCondition, p.prodQuantity,t.tranCode
	 	FROM product p, transaction t
	 	<where>
	 		p.prodNo = t.prodNo and t.userId = #{userId} and t.tranCode='1'
	 		<if test="searchProductCondition != null">
	 		<!-- 현재보관중인 물품만 보기위한 조건-->
	 		 and p.prodCondition = #{searchProductCondition}
	 		</if>
	 	</where>
	 	ORDER BY t.tranNo DESC
	 </select>
	 
	 <!-- SELECT LIST ADMIN -->
	<select  id="getRentalListForAdmin"  parameterType="Search"	resultMap="rentalSelectMap">
	  	SELECT t.prodNo, t.tranNo, t.userId, t.prodName, t.startDate, t.endDate, t.paymentDate, t.resultPrice,  p.recentImg, p.prodCondition
	 	FROM product p, transaction t
	 	<where>
	 		 p.prodNo = t.prodNo AND  
	 		(p.prodCondition ='물품대여승인신청중' OR 
	 		 p.prodCondition = '배송중' OR
	 		 p.prodCondition = '대여중')
	 		 
	 		<!-- ProductCondition만 선택한경우-->
	 		<if test="searchKeyword == null and searchCondition == null and searchProductCondition != null" >
	 		 and p.prodCondition = #{searchProductCondition}
	 		</if>
	 	
	 		
	 	<if test="searchCondition != null">
	 	
	 		<!-- ProductCondition과  searchCondition, searchKeyword 모두 선택한경우-->
	 		<if test="searchKeyword != null and searchCondition == 1  and searchProductCondition != null" >
	 		 and p.prodCondition = #{searchProductCondition} and t.prodName LIKE CONCAT('%',#{searchKeyword},'%')
	 		</if>
	 		
	 		<if test="searchKeyword != null and searchCondition == 2  and searchProductCondition != null" >
	 		 and p.prodCondition = #{searchProductCondition} and t.userId LIKE CONCAT('%',#{searchKeyword},'%')
	 		</if>

	 		<!-- searchCondition, searchKeyword 를 선택한경우-->
	 			<if test="searchKeyword != null and searchCondition == 1 and searchProductCondition == null" >
	 		 and t.prodName LIKE CONCAT('%',#{searchKeyword},'%')
	 		</if>
	 		
	 		<if test="searchKeyword != null and searchCondition == 2 and searchProductCondition == null" >
	 		 and t.userId LIKE CONCAT('%',#{searchKeyword},'%')
	 		</if>
	 	</if>
	 	
	 		
	 		
	 	</where>
	 	<if test="orderCondition != null">
	 		<if test='orderCondition == "tranNoASC"'>
	 		ORDER BY t.tranNo ASC
	 		</if>
	 		<if test='orderCondition == "tranNoDESC"'>
	 		ORDER BY t.tranNo DESC
	 		</if>
	 		<if test='orderCondition == "startDateASC"'>
	 		ORDER BY t.startDate ASC
	 		</if>
	 		<if test='orderCondition == "startDateDESC"'>
	 		ORDER BY t.startDate DESC
	 		</if>
	 	</if>
	 </select>

	 
	 
	<!--SELECT Total Count -->	 
	 <select  id="getTotalCount"  parameterType="Search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM product p, transaction t
	  	<where>
	 		 p.prodNo = t.prodNo AND  
	 		(p.prodCondition ='물품대여승인신청중' OR 
	 		 p.prodCondition = '배송중' OR
	 		 p.prodCondition = '대여중')
	 			 		
	 		<if test="searchKeyword == null and searchCondition == null and searchProductCondition != null" >
	 		 and p.prodCondition = #{searchProductCondition}
	 		</if>
	 		
	 	<if test="searchCondition != null">
	 		
	 		<if test="searchKeyword != null and searchCondition == 1  and searchProductCondition != null" >
	 		 and p.prodCondition = #{searchProductCondition} and t.prodName LIKE CONCAT('%',#{searchKeyword},'%')
	 		</if>
	 		
	 		<if test="searchKeyword != null and searchCondition == 2  and searchProductCondition != null" >
	 		 and p.prodCondition = #{searchProductCondition} and t.userId LIKE CONCAT('%',#{searchKeyword},'%')
	 		</if>
	 		
	 		
	 			<if test="searchKeyword != null and searchCondition == 1 and searchProductCondition == null" >
	 		 and t.prodName LIKE CONCAT('%',#{searchKeyword},'%')
	 		</if>
	 		
	 		<if test="searchKeyword != null and searchCondition == 2 and searchProductCondition == null" >
	 		 and t.userId LIKE CONCAT('%',#{searchKeyword},'%')
	 		</if>
	 	</if>
	 		 		
	 	</where>
	  	
	 </select>
	 
	 	<!-- SELECT PROFIT LIST -->
	<select  id="getRentalListProfit"  parameterType="map"	resultMap="rentalSelectMap">
			SELECT transaction.tranNo, product.prodName , transaction.userId, transaction.resultPrice
		 	FROM transaction LEFT OUTER JOIN (SELECT * FROM transaction WHERE tranCode=0) A ON transaction.prodNo = A.prodNo
		 	LEFT OUTER JOIN product ON product.prodNo = transaction.prodNo
	 	<where>
	 		transaction.tranCode='1' and A.userId= #{userId}
	 	</where>
	 </select>
	 
	 <select id="getRentalProfitTotal" parameterType="string"  resultType="int">
	 		SELECT SUM(transaction.resultPrice)
		 	FROM transaction LEFT OUTER JOIN (SELECT * FROM transaction WHERE tranCode=0) A ON transaction.prodNo = A.prodNo
		 	LEFT OUTER JOIN product ON product.prodNo = transaction.prodNo
	 	<where>
	 		transaction.tranCode='1' and A.userId= #{userId}
	 	</where>
	 </select>
	 
	 <!--SELECT total rental profit-->
	  <select  id="getTotalRentalProfit"  parameterType="string"	 resultType="int">
	  	SELECT IFNULL(SUM(resultPrice),0)
	  	FROM transaction
	  	WHERE userId = #{userId}
			 </select>
		
		
</mapper>